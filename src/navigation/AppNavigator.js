// src/navigation/AppNavigator.js
import React, { useEffect, useState, useCallback } from 'react';
import { View, StyleSheet, Text } from 'react-native';
import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';
import { useThemeColors } from '../hooks/useTheme';
import { useAuth } from '../hooks/useAuth';
import AuthNavigator from './AuthNavigator';
import MainNavigator from './MainNavigator';
import LoadingSpinner from '../components/common/LoadingSpinner';

// Error Boundary –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
class NavigationErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false, error: null };
  }

  static getDerivedStateFromError(error) {
    return { hasError: true, error };
  }

  componentDidCatch(error, errorInfo) {
    console.error('Navigation Error:', error, errorInfo);
  }

  render() {
    if (this.state.hasError) {
      return (
        <View style={styles.errorContainer}>
          <Text style={styles.errorText}>
            –©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫ –∑ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å –¥–æ–¥–∞—Ç–æ–∫.
          </Text>
        </View>
      );
    }

    return this.props.children;
  }
}

const AppNavigator = () => {
  console.log('üîÑ [AppNavigator] –ü–æ—á–∞—Ç–æ–∫ —Ä–µ–Ω–¥–µ—Ä—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');

  // Hooks used for theme
  const { colors, isDark } = useThemeColors();
  console.log('üé® [useThemeColors] –¢–µ–º–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞:', { isDark, hasColors: !!colors });

  // Hooks used for authentication - –æ—Ç—Ä–∏–º—É—î–º–æ —è–∫ isAuthenticated, —Ç–∞–∫ —ñ isGuest
  const { isAuthenticated, isGuest, isLoading: authLoading, checkAuthStatus } = useAuth();
  console.log('üîê [useAuth] –°—Ç–∞–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó:', { isAuthenticated, isGuest, authLoading, hasCheckAuthStatus: !!checkAuthStatus });

  // State hook for initialization
  const [isInitializing, setIsInitializing] = useState(true);
  console.log('‚öôÔ∏è [useState] –°—Ç–∞–Ω —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:', isInitializing);

  // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–º–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
  const navigationTheme = isDark ? DarkTheme : DefaultTheme;
  const customTheme = {
    ...navigationTheme,
    colors: {
      ...navigationTheme.colors,
      primary: colors.primary,
      background: colors.background,
      card: colors.card,
      text: colors.text,
      border: colors.border,
      notification: colors.error,
    },
  };
  console.log('üé® [–¢–µ–º–∞] –¢–µ–º–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞');

  // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –Ω–∞–≤—ñ–≥–∞—Ç–æ—Ä–∞ - –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≥–æ—Å—Ç—è
  const renderActiveNavigator = useCallback(() => {
    console.log('üß≠ [useCallback] –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –Ω–∞–≤—ñ–≥–∞—Ç–æ—Ä–∞:', { isAuthenticated, isGuest });
    // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π –∞–±–æ —É–≤—ñ–π—à–æ–≤ —è–∫ –≥—ñ—Å—Ç—å - –ø–æ–∫–∞–∑—É—î–º–æ MainNavigator
    if (isAuthenticated || isGuest) {
      console.log('üß≠ [useCallback] –ü–æ–∫–∞–∑ MainNavigator');
      return <MainNavigator />;
    } else {
      console.log('üß≠ [useCallback] –ü–æ–∫–∞–∑ AuthNavigator');
      return <AuthNavigator />;
    }
  }, [isAuthenticated, isGuest]);
  console.log('üß≠ [useCallback] –§—É–Ω–∫—Ü—ñ—è renderActiveNavigator —Å—Ç–≤–æ—Ä–µ–Ω–∞');

  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–¥–∞—Ç–∫—É

  useEffect(() => {
    console.log('üöÄ [useEffect] –ï—Ñ–µ–∫—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∑–∞–ø—É—â–µ–Ω–æ');
    const initializeApp = async () => {
      try {
        console.log('üîÑ [initializeApp] –ü–æ—á–∞—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–æ–¥–∞—Ç–∫—É');
        if (checkAuthStatus) {
          console.log('üîë [initializeApp] –í–∏–∫–ª–∏–∫ checkAuthStatus');
          await checkAuthStatus();
          console.log('‚úÖ [initializeApp] checkAuthStatus –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
        } else {
          console.warn('‚ö†Ô∏è [initializeApp] checkAuthStatus —î undefined');
        }
      } catch (error) {
        console.error('‚ùå [App initialization error]:', error);
      }
      // –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ setIsInitializing(false) —Ç—É—Ç, –±–æ —Ü–µ –º–æ–∂–µ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –∑–∞–π–≤–∏–π —Ä–µ–Ω–¥–µ—Ä
    };

    // –í–∏–∫–æ–Ω—É—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –ª–∏—à–µ –æ–¥–∏–Ω —Ä–∞–∑
    if (isInitializing) {
      console.log('‚ö° [useEffect] –ó–∞–ø—É—Å–∫ initializeApp –æ—Å–∫—ñ–ª—å–∫–∏ isInitializing = true');
      initializeApp().then(() => {
        setIsInitializing(false);
        console.log('üèÅ [initializeApp] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, isInitializing –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ false');
      });
    } else {
      console.log('‚è≠Ô∏è [useEffect] –ü—Ä–æ–ø—É—Å–∫ initializeApp –æ—Å–∫—ñ–ª—å–∫–∏ isInitializing = false');
    }
  }, [checkAuthStatus, isInitializing]);
  console.log('üöÄ [useEffect] –ï—Ñ–µ–∫—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ');

  // --- END OF HOOKS ---

  // –û–±—Ä–æ–±–∫–∞ —Å—Ç–∞–Ω—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  console.log('‚è≥ [–†–µ–Ω–¥–µ—Ä] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', { isInitializing, authLoading });
  if (isInitializing || authLoading) {
    console.log('‚è≥ [–†–µ–Ω–¥–µ—Ä] –ü–æ–∫–∞–∑ –µ–∫—Ä–∞–Ω—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
    return (
      <View style={[styles.loadingContainer, { backgroundColor: colors.background }]}>
        <LoadingSpinner
          visible={true}
          text="–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–¥–∞—Ç–∫—É..."
          overlay={true}
        />
      </View>
    );
  }

  console.log('‚úÖ [–†–µ–Ω–¥–µ—Ä] –ü–æ–∫–∞–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó');
  return (
    <NavigationErrorBoundary>
      <NavigationContainer
        theme={customTheme}
        fallback={
          <View style={[styles.loadingContainer, { backgroundColor: colors.background }]}>
            <LoadingSpinner
              visible={true}
              text="–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó..."
              overlay={true}
            />
          </View>
        }
      >
        {renderActiveNavigator()}
      </NavigationContainer>
    </NavigationErrorBoundary>
  );
};

const styles = StyleSheet.create({
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  errorContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20,
  },
  errorText: {
    fontSize: 16,
    textAlign: 'center',
    color: '#ff3b30',
  },
});

export default AppNavigator;